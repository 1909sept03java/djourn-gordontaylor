
DROP TABLE IF EXISTS CREATE TABLE CEMPLOYEE 
(
  EMPLOYEE_ID INT NOT NULL 
, SALARY NUMBER 
, EMP_EMAIL VARCHAR2(20) 
, EMP_FIRSTNAME VARCHAR2(20) NOT NULL 
, EMP_LASTNAME VARCHAR2(20) NOT NULL 
, DEPARTMENT_ID INT NOT NULL 
, CONSTRAINT CEMPLOYEE_PK PRIMARY KEY 
  (
    EMPLOYEE_ID 
  )
  ENABLE 
);


DROP TABLE IF EXISTS CREATE TABLE CDEPARTMENT 
(
  DEPARTMENT_ID INT NOT NULL 
, DEPARTMENT_NAME VARCHAR2(20) NOT NULL 
, CONSTRAINT CDEPARTMENT_PK PRIMARY KEY 
  (
    DEPARTMENT_ID 
  )
  ENABLE 
);

--SET UP SEQUENCES TO PRODUCE PRIMARY KEYS 
CREATE SEQUENCE CEMP_PK
START WITH 0000
INCREMENT BY 1;
/


CREATE SEQUENCE CDEPT_PK
START WITH 10000
INCREMENT BY 1;
/

--TRIGGERS:
CREATE OR REPLACE TRIGGER TR_INSERT_CEMP
BEFORE INSERT ON CEMPLOYEE --SPECIFY OPERATION, BEFORE/AFTER, AND TABLE 
FOR EACH ROW
BEGIN
    SELECT CEMP_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_DEPT
BEFORE INSERT ON CDEPARTMENT --SPECIFY OPERATION, BEFORE/AFTER, AND TABLE 
FOR EACH ROW
BEGIN
    SELECT CDEPT_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;
/

--PROCEDURE TO GIVE RAISE
CREATE OR REPLACE PROCEDURE  SP_GIVE_RAISE()
return  boolean
IS
BEGIN
 IF DEPATMENT_ID IN (SELECT DEPARTMENT_ID FROM CDEPARTMENT) THEN UPDATE CEMPLOYEE 
SET SALARY = SALARY*1.1 WHERE DEPARTMENT_ID = DEPARTMENT

  return true;

END;

-- 
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(D_ID IN NUMBER , AVG_SALARY OUT NUMBER)
IS
-- VARIBLE DECLARATIONS
DEPT_EXISTS INTEGER;
BEGIN
    --CHECK THAT DEPT ID ARE CORRECTLY MATCHED
    SELECT COUNT(CD.DEPARTMENT_ID) INTO DEPT_EXISTS --PASSING VALUE OF COUNT TO DEPT_EXISTS
    FROM CDEPARTMENT CD -- A
    WHERE CD.DEPARTMENT_ID = D_ID;
    --IF THERE'S A MATCH
    IF DEPT_EXISTS > 0  THEN
        --REDUCE HIVE WEIGHT
        UPDATE CEMPLOYEE SET SALARY = SALARY * 1.1
        WHERE DEPARTMENT_ID = D_ID;
        --GIVE AVERAGE
DBMS_OUTPUT.PUT_LINE('Salaries increased');
       SELECT AVG(SALARY)  INTO AVG_SALARY FROM CEMPLOYEE WHERE DEPARTMENT_ID = D_ID GROUP BY DEPARTMENT_ID ;
    ELSE
DBMS_OUTPUT.PUT_LINE('The Department ID entered is invalid');

    END IF;


END;

DECLARE
AVG_SALARY NUMBER;
BEGIN
SP_GIVE_RAISE(10001,AVG_SALARY);
END;